[{"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/index.js":"1","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/App.js":"2","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/Login.js":"3","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/reportWebVitals.js":"4","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/Header.js":"5","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionHistoryPage.js":"6","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionTableFilter.js":"7","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionTable.js":"8","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionHistoryHeader.js":"9","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/serverEmulator.js":"10","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/transferForm.js":"11","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/dashboard.js":"12","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/Charts.js":"13"},{"size":1190,"mtime":1607670076934,"results":"14","hashOfConfig":"15"},{"size":1041,"mtime":1607673844168,"results":"16","hashOfConfig":"15"},{"size":2767,"mtime":1607673824880,"results":"17","hashOfConfig":"15"},{"size":362,"mtime":1607654662248,"results":"18","hashOfConfig":"15"},{"size":396,"mtime":1607670076933,"results":"19","hashOfConfig":"15"},{"size":2097,"mtime":1607673819201,"results":"20","hashOfConfig":"15"},{"size":212,"mtime":1607673819202,"results":"21","hashOfConfig":"15"},{"size":9699,"mtime":1607673819201,"results":"22","hashOfConfig":"15"},{"size":193,"mtime":1607673819200,"results":"23","hashOfConfig":"15"},{"size":4965,"mtime":1607673819203,"results":"24","hashOfConfig":"15"},{"size":3441,"mtime":1607673829426,"results":"25","hashOfConfig":"15"},{"size":2391,"mtime":1607675182142,"results":"26","hashOfConfig":"15"},{"size":3963,"mtime":1607673829426,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"i2o2gl",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/index.js",["63"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\nimport Login from './Login';\n\naxios.defaults.baseURL = 'https://u8fpqfk2d4.execute-api.ap-southeast-1.amazonaws.com/techtrek2020';\naxios.defaults.headers.common['x-api-key'] = 'AvznKwHoRPaClLwHbinGV8RezzoVYl5f7aogWGl3';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] =  \"*\";\naxios.defaults.headers.common[\"Access-Control-Allow-Credentials\"] = \"true\";\naxios.defaults.headers.common[\"Access-Control-Allow-Methods\"] = \"GET,HEAD,OPTIONS,POST,PUT\";\naxios.defaults.headers.common[\"Access-Control-Allow-Headers\"] = \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["64","65"],"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/App.js",["66","67"],"import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Header from \"./Header\";\nimport TransactionHistoryPage from \"./components/TransactionTablePage/TransactionHistoryPage\";\nimport \"ka-table/style.scss\";\nimport TransferForm from \"./transferForm\";\nimport Dashboard from \"./components/dashboard\";\nimport { useState } from \"react\";\nimport Charts from \"./Charts\"\n\nfunction App() {\n  const [isLoggedIn, setLogIn] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          {<Header />}\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/trans_history\" component={TransactionHistoryPage} />\n            <Route path=\"/trans_form\" component={TransferForm} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/charts\" component={Charts} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/Login.js",["68","69"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Login.css\";\nimport Header from \"./Header\";\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isLoggedin: false,\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  changeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n    let data = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    console.log(data);\n    axios\n      .post(\n        \"https://u8fpqfk2d4.execute-api.ap-southeast-1.amazonaws.com/techtrek2020/login\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: {\n            \"x-api-key\": \"AvznKwHoRPaClLwHbinGV8RezzoVYl5f7aogWGl3\",\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\":\n              \"Origin, X-Requested-With, Content-Type, Accept\",\n            \"Origin\": \"http://localhost:3000\",\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((e) => {\n        this.props.history.push('/dashboard');\n      });\n    /*axios.post(\"/login\", data)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch(err => {\n        console.log(err)\n    });*/\n  }\n\n  render() {\n    return (\n      <div className=\"login\">\n        <div className=\"form-wrapper\">\n          <form>\n            <h1> DBS E-WALLET</h1>\n            <div className=\"form-group\">\n              <label>Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter Username\"\n                value={this.state.username}\n                onChange={this.changeHandler}\n                name=\"username\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                value={this.state.password}\n                onChange={this.changeHandler}\n                name=\"password\"\n                placeholder=\"Enter Password\"\n              />\n            </div>\n            <button\n              onClick={this.submitHandler}\n              className=\"btn btn-primary btn-block\"\n            >\n              <b>Login</b>\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/reportWebVitals.js",[],"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/Header.js",[],"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionHistoryPage.js",["70"],"import React, { useState, useEffect } from \"react\";\nimport TransactionTable from \"./TransactionTable\";\nimport TransactionTableFilter from \"./TransactionTableFilter\";\nimport TransactionHistoryHeader from \"./TransactionHistoryHeader\";\nimport { EditingMode, SortingMode } from \"ka-table/enums\";\n\nfunction TransactionHistoryPage (){\n  const [table, setTable] = useState({});\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"useeffct\")\n\n    // Call API to fetch user's name\n    fetchUserName();\n    // Call API to fetch user's transactions\n    fetchUserTransaction();\n  },[]);\n\n  const fetchUserName = () => {\n    let data = \"Team 19\";\n\n    console.log(\"beofre\", name);\n    setName(data);\n    console.log(\"after\", name);\n\n  };\n\n  const fetchUserTransaction = () => {\n    let dataArray = Array(10)\n      .fill(undefined)\n      .map((_, index) => ({\n        column1: `column:1 row:${index}`,\n        column2: `column:2 row:${index}`,\n        column3: `column:3 row:${index}`,\n        column4: `column:4 row:${index}`,\n        column5: `column:1 row:${index}`,\n        column6: `column:2 row:${index}`,\n        column7: `column:3 row:${index}`,\n        id: index,\n      }));\n\n    console.log(\"data\", dataArray);\n\n    let tablePropsInit = {\n      columns: [\n        { key: \"column1\", title: \"SN\" },\n        { key: \"column2\", title: \"Payee Id\" },\n        { key: \"column3\", title: \"Date\" },\n        { key: \"column4\", title: \"Amount\" },\n        { key: \"column5\", title: \"eGift\" },\n        { key: \"column6\", title: \"Message\" },\n        { key: \"column7\", title: \"Expenses\" },\n      ],\n      data: dataArray,\n      editingMode: EditingMode.Cell,\n      rowKeyField: \"id\",\n      sortingMode: SortingMode.Single,\n    };\n\n    console.log(\"data\", tablePropsInit);\n\n    setTable(tablePropsInit);\n    console.log(\"tanle\", table)\n  };\n\n  console.log(\"table -> \", table)\n  console.log(\"name -> \", name)\n\n\n\n  return (\n    <div>\n      <TransactionHistoryHeader name={name} />\n      <TransactionTableFilter />\n      <TransactionTable/>\n    </div>\n  );\n};\n\nexport default TransactionHistoryPage;\n","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionTableFilter.js",[],"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionTable.js",["71","72","73","74","75"],"// // import \"ka-table/style.css\";\n\n// // import React, { useEffect, useState } from \"react\";\n\n// // import { ITableProps, kaReducer, Table } from \"ka-table\";\n// // import { DataType, EditingMode, SortingMode } from \"ka-table/enums\";\n// // import { DispatchFunc } from \"ka-table/types\";\n// // import { kaPropsUtils } from 'ka-table/utils';\n\n// import React, { useEffect, useState } from \"react\";\n\n// import { kaReducer, Table } from \"ka-table\";\n// import { search } from \"ka-table/actionCreators\";\n// import {\n//   DataType,\n//   EditingMode,\n//   FilteringMode,\n//   SortDirection,\n//   SortingMode,\n// } from \"ka-table/enums\";\n// import { kaPropsUtils } from \"ka-table/utils\";\n\n// const dataArray = Array(10)\n//   .fill(undefined)\n//   .map((_, index) => ({\n//     column1: `column:1 row:${index}`,\n//     column2: `column:2 row:${index}`,\n//     column3: `column:3 row:${index}`,\n//     column4: `column:4 row:${index}`,\n//     column5: `column:1 row:${index}`,\n//     column6: `column:2 row:${index}`,\n//     column7: `column:3 row:${index}`,\n//     id: index,\n//   }));\n\n// const tablePropsInit = {\n//   columns: [\n//     { key: \"column1\", title: \"SN\" },\n//     { key: \"column2\", title: \"Payee Id\" },\n//     { key: \"column3\", title: \"Date\" },\n//     { key: \"column4\", title: \"Amount\" },\n//     { key: \"column5\", title: \"eGift\" },\n//     { key: \"column6\", title: \"Message\" },\n//     { key: \"column7\", title: \"Expenses\" },\n//   ],\n//   data: dataArray,\n//   editingMode: EditingMode.Cell,\n//   rowKeyField: \"id\",\n//   sortingMode: SortingMode.Single,\n// };\n\n// // const TransactionTable = () => {\n// // //   console.log(\"table: \", table);\n\n// // //   const [table, setTable] = useState({});\n\n// // //   useEffect(() => {\n// // //     console.log(\"useeffct2\");\n// // //     // Call API to fetch user's transactions\n// // //     fetchUserTransaction();\n// // //   }, []);\n\n// // //   const data = kaPropsUtils.getData(table);\n\n// // //   let data = { ...tablePropsInit, data: table };\n// //   return <Table {...tablePropsInit} />;\n// // };\n\n// // export default TransactionTable;\n\n// // const dataArray = [\n// //   { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\n// //   { id: 2, name: 'Billi Bob', score: 55, passed: false, nextTry: new Date(2019, 10, 8, 10) },\n// //   { id: 3, name: 'Tom Williams', score: 45, passed: false, nextTry: new Date(2019, 11, 8, 10) },\n// //   { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\n// //   { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\n// //   { id: 6, name: 'Sunny Fox', score: 33, passed: false, nextTry: new Date(2019, 10, 9, 10) },\n// // ];\n\n// // const tablePropsInit = {\n// //   columns: [\n// //     { dataType: DataType.String, key: 'name', title: 'Name', sortDirection: SortDirection.Ascend },\n// //     { key: 'score', title: 'Score', dataType: DataType.Number },\n// //     {\n// //       dataType: DataType.Boolean,\n// //       key: 'passed',\n// //       title: 'Passed',\n// //     },\n// //     {\n// //       dataType: DataType.Date,\n// //       key: 'nextTry',\n// //       title: 'Next Try',\n// //     },\n// //   ],\n// //   data: dataArray,\n// //   editingMode: EditingMode.Cell,\n// //   format: ({ column, value }) => {\n// //     if (column.dataType === DataType.Date){\n// //       return value && value.toLocaleDateString('en', {month: '2-digit', day: '2-digit', year: 'numeric' });\n// //     }\n// //   },\n// //   rowKeyField: 'id',\n// //   filteringMode: FilteringMode.FilterRow,\n// //   sortingMode: SortingMode.Single,\n// // };\n\n// const TransactionTable = () => {\n//   const [tableProps, changeTableProps] = useState(tablePropsInit);\n//   const dispatch = (action) => {\n//     changeTableProps((prevState) => kaReducer(prevState, action));\n//   };\n//   console.log(\"tans\")\n\n//   useEffect(() => {\n//     console.log(\"effect\")\n\n//     const dataArray = [\n//       { id: 1, name: \"Mike Wazowski\", score: 80, passed: true },\n//       {\n//         id: 2,\n//         name: \"Billi Bob\",\n//         score: 55,\n//         passed: false,\n//         nextTry: new Date(2019, 10, 8, 10),\n//       },\n//       {\n//         id: 3,\n//         name: \"Tom Williams\",\n//         score: 45,\n//         passed: false,\n//         nextTry: new Date(2019, 11, 8, 10),\n//       },\n//       { id: 4, name: \"Kurt Cobain\", score: 75, passed: true },\n//       { id: 5, name: \"Marshall Bruce\", score: 77, passed: true },\n//       {\n//         id: 6,\n//         name: \"Sunny Fox\",\n//         score: 33,\n//         passed: false,\n//         nextTry: new Date(2019, 10, 9, 10),\n//       },\n//     ];\n\n//     const tablePropsInit = {\n//       columns: [\n//         {\n//           dataType: DataType.String,\n//           key: \"name\",\n//           title: \"Name\",\n//           sortDirection: SortDirection.Ascend,\n//         },\n//         { key: \"score\", title: \"Score\", dataType: DataType.Number },\n//         {\n//           dataType: DataType.Boolean,\n//           key: \"passed\",\n//           title: \"Passed\",\n//         },\n//         {\n//           dataType: DataType.Date,\n//           key: \"nextTry\",\n//           title: \"Next Try\",\n//         },\n//       ],\n//       data: dataArray,\n//       editingMode: EditingMode.Cell,\n//       format: ({ column, value }) => {\n//         if (column.dataType === DataType.Date) {\n//           return (\n//             value &&\n//             value.toLocaleDateString(\"en\", {\n//               month: \"2-digit\",\n//               day: \"2-digit\",\n//               year: \"numeric\",\n//             })\n//           );\n//         }\n//       },\n//       rowKeyField: \"id\",\n//       filteringMode: FilteringMode.FilterRow,\n//       sortingMode: SortingMode.Single,\n//     };\n\n//     changeTableProps(tablePropsInit);\n//   });\n\n// //   const data = kaPropsUtils.getData(tableProps);\n\n//   return (\n//     <div className=\"obtain-table-data-demo\">\n//       <input\n//         type=\"search\"\n//         defaultValue={tableProps.searchText}\n//         onChange={(event) => {\n//           dispatch(search(event.currentTarget.value));\n//         }}\n//         className=\"top-element\"\n//       />\n//       <Table {...tableProps} dispatch={dispatch} />\n//     </div>\n//   );\n// };\n\n// export default TransactionTable;\n\nimport React, { useState } from \"react\";\n\n\nimport { ITableProps, kaReducer, Table } from \"ka-table\";\nimport {\n  deleteRow,\n  hideLoading,\n  showLoading,\n  updateData,\n  updatePagesCount,\n} from \"ka-table/actionCreators\";\nimport { ActionType, DataType, EditingMode, SortingMode } from \"ka-table/enums\";\nimport { ICellTextProps } from \"ka-table/props\";\nimport { DispatchFunc } from \"ka-table/types\";\nimport { getField } from \"ka-table/Utils/ColumnUtils\";\nimport serverEmulator from \"./serverEmulator\";\n\nconst DeleteRow = ({ dispatch, rowKeyValue }) => {\n  return (\n    <img\n      src=\"static/icons/delete.svg\"\n      className=\"delete-row-column-button\"\n      onClick={() => dispatch(deleteRow(rowKeyValue))}\n      alt=\"\"\n    />\n  );\n};\n\nconst tablePropsInit = {\n  columns: [\n    { key: \"column1\", title: \"SN\" },\n    { key: \"column2\", title: \"Payee Id\" },\n    { key: \"column3\", title: \"Date\" },\n    { key: \"column4\", title: \"Amount\" },\n    { key: \"column5\", title: \"eGift\" },\n    { key: \"column6\", title: \"Message\" },\n    { key: \"column7\", title: \"Expenses\" },\n  ],\n\n  editingMode: EditingMode.Cell,\n  loading: {\n    enabled: true,\n    text: \"Loading Data..\",\n  },\n  paging: {\n    enabled: true,\n    pageIndex: 0,\n    pageSize: 10,\n  },\n  sortingMode: SortingMode.SingleRemote,\n  rowKeyField: \"id\",\n};\n\nconst initGetData = (props, dispatch) => {\n  return (action) => {\n    // GET FROM API\n    serverEmulator.get().then((result) => {\n      dispatch(updatePagesCount(result.pagesCount));\n      dispatch(updateData(result.data));\n      dispatch(hideLoading());\n    });\n    // serverEmulator\n    //   .get(props.paging, props.columns, action?.pageIndex)\n    //   .then((result) => {\n    //     dispatch(updatePagesCount(result.pagesCount));\n    //     dispatch(updateData(result.data));\n    //     dispatch(hideLoading());\n    //   });\n  };\n};\n\nconst TransactionTable = () => {\n  const [tableProps, changeTableProps] = useState(tablePropsInit);\n  const dispatch = (action) => {\n    if (action.type === ActionType.DeleteRow) {\n      dispatch(showLoading('Deleting Row..'));\n      serverEmulator.delete(action.rowKeyValue).then((result) => {\n        getData(action);\n      });\n    } else if (action.type === ActionType.UpdateCellValue) {\n      dispatch(showLoading('Updating Data..'));\n      const column = tableProps.columns.find((c) => c.key === action.columnKey);\n      serverEmulator.update(action.rowKeyValue, { [getField(column)]: action.value }).then(() => {\n        getData(action);\n      });\n    } else if (action.type === ActionType.UpdatePageIndex) {\n      dispatch(showLoading('Loading Data..'));\n      getData(action);\n    } else if (action.type === ActionType.UpdateSortDirection) {\n      dispatch(showLoading('Loading Data..'));\n      initGetData(kaReducer(tableProps, action), dispatch)(action);\n    }\n    changeTableProps((prevState) => kaReducer(prevState, action));\n  };\n  const getData = initGetData(tableProps, dispatch);\n\n  if (!tableProps.data) {\n    getData();\n  }\n\n  return (\n    <div className=\"remote-data-demo\">\n      <Table\n        {...tableProps}\n        // childComponents={{\n        //   cell: {\n        //     content: (props) => {\n        //       if (props.column.key === \":delete\") {\n        //         return <DeleteRow {...props} />;\n        //       }\n        //     },\n        //   },\n        //   noDataRow: {\n        //     content: () => \"No data\",\n        //   },\n        // }}\n        dispatch={dispatch}\n      />\n    </div>\n  );\n};\n\nexport default TransactionTable;\n","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/TransactionHistoryHeader.js",[],"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/TransactionTablePage/serverEmulator.js",["76","77"],"import { IPagingProps } from \"ka-table/Components/Paging/Paging\";\nimport { getPageData, getPagesCount } from \"ka-table/Utils/PagingUtils\";\n\nlet dataArray = Array(100)\n  .fill(undefined)\n  .map((_, index) => ({\n    column1: `column:1 row:${index}`,\n    column2: `column:2 row:${index}`,\n    column3: `column:3 row:${index}`,\n    column4: `column:4 row:${index}`,\n    id: index,\n  }));\n\n//   { key: \"column1\", title: \"SN\" },\n//     { key: \"column2\", title: \"Payee Id\" },\n//     { key: \"column3\", title: \"Date\" },\n//     { key: \"column4\", title: \"Amount\" },\n//     { key: \"column5\", title: \"eGift\" },\n//     { key: \"column6\", title: \"Message\" },\n//     { key: \"column7\", title: \"Expenses\" },\n\nconst get = (paging) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      let res = resData.map((value, index) => {\n        return {\n          column1: `${index}`,\n          column2: `${value[\"payeeID\"]}`,\n          column3: `${value[\"dateTime\"]}`,\n          column4: `${value[\"amount\"]}`,\n          column5: `${value[\"eGift\"]}`,\n          column6: `${value[\"message\"]}`,\n          column7: `${value[\"expensesCat\"]}`,\n          id: index,\n        };\n      });\n      resolve(\n        // {\n        //   data: getPageData(resData, { ...paging, pagesCount: undefined }),\n        //   pagesCount: getPagesCount(resData, {\n        //     ...paging,\n        //     pagesCount: undefined,\n        //   }),\n        // }\n        {\n          data: getPageData(res, { ...paging, pagesCount: undefined }),\n          pagesCount: getPagesCount(res, {\n            ...paging,\n            pagesCount: undefined,\n          }),\n        }\n      );\n    }, 1000);\n  });\n};\n\nconst resData = [\n  {\n    eGift: true,\n    dateTime: \"2020-09-02T10:21:33.457Z\",\n    custID: 9,\n    expensesCat: \"Food\",\n    amount: 859.25,\n    message: \"Thanks. :)\",\n    payeeID: 4,\n  },\n  {\n    eGift: false,\n    dateTime: \"2020-07-05T05:16:26.062Z\",\n    custID: 25,\n    expensesCat: \"Food\",\n    amount: 630.1,\n    message: \"\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-12-11T05:20:47.780Z\",\n    custID: 7,\n    expensesCat: \"Transport\",\n    amount: 0.01,\n    message: \"msg\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-12-11T05:48:35.390Z\",\n    custID: 7,\n    expensesCat: \"Transport\",\n    amount: 0.01,\n    message: \"msg\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-08-16T01:09:11.190Z\",\n    custID: 25,\n    expensesCat: \"Entertainment\",\n    amount: 581.43,\n    message: \"Thanks. :)\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-06-06T03:11:59.690Z\",\n    custID: 10,\n    expensesCat: \"Food\",\n    amount: 519.26,\n    message: \"Thanks. :)\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-08-27T20:16:56.728Z\",\n    custID: 22,\n    expensesCat: \"Insurance\",\n    amount: 130.07,\n    message: \"Thanks. :)\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-12-11T05:43:18.680Z\",\n    custID: 7,\n    expensesCat: \"Transport\",\n    amount: 0.01,\n    message: \"msg\",\n    payeeID: 9,\n  },\n  {\n    eGift: false,\n    dateTime: \"2020-05-05T17:03:08.932Z\",\n    custID: 23,\n    expensesCat: \"Transport\",\n    amount: 511.49,\n    message: \"\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-11-21T05:56:19.444Z\",\n    custID: 9,\n    expensesCat: \"Transport\",\n    amount: 221.4,\n    message: \"Thanks. :)\",\n    payeeID: 13,\n  },\n  {\n    eGift: false,\n    dateTime: \"2020-04-09T15:35:26.855Z\",\n    custID: 22,\n    expensesCat: \"Transport\",\n    amount: 181.49,\n    message: \"\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-12-11T05:22:53.113Z\",\n    custID: 7,\n    expensesCat: \"Transport\",\n    amount: 0.01,\n    message: \"msg\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2019-12-14T12:27:01.750Z\",\n    custID: 9,\n    expensesCat: \"Food\",\n    amount: 472.33,\n    message: \"Thanks. :)\",\n    payeeID: 1,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-06-27T01:02:58.171Z\",\n    custID: 9,\n    expensesCat: \"Food\",\n    amount: 514.98,\n    message: \"Thanks. :)\",\n    payeeID: 11,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-04-17T15:54:28.853Z\",\n    custID: 20,\n    expensesCat: \"Transport\",\n    amount: 468.69,\n    message: \"Thanks. :)\",\n    payeeID: 9,\n  },\n  {\n    eGift: false,\n    dateTime: \"2020-06-29T14:25:40.862Z\",\n    custID: 25,\n    expensesCat: \"Shopping\",\n    amount: 120.53,\n    message: \"\",\n    payeeID: 9,\n  },\n  {\n    eGift: true,\n    dateTime: \"2020-05-06T00:12:44.701Z\",\n    custID: 9,\n    expensesCat: \"Shopping\",\n    amount: 214.69,\n    message: \"Thanks. :)\",\n    payeeID: 16,\n  },\n];\n\nconst update = (id, data, paging) => {\n  for (let i = 0; i < dataArray.length; i++) {\n    if (dataArray[i].id === id) {\n      dataArray[i] = { ...dataArray[i], ...data };\n    }\n  }\n  return get(paging);\n};\n\nconst deleteRow = (id, paging) => {\n  dataArray = dataArray.filter((d) => d.id !== id);\n  return get(paging);\n};\n\nexport default {\n  delete: deleteRow,\n  get,\n  update,\n};\n","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/transferForm.js",["78"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass transferForm extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  state = {\n    custID: this.props.cusID,\n    payeeID: '',\n    dateTime: new Date().toLocaleString(),\n    amount: '',\n    expensesCat: '',\n    eGift: '',\n    message: '',\n  }\n\n  handlePayeeIDChange = (event) => {\n    this.setState({\n      payeeID: event.target.value\n    })\n  }\n  handleAmountChange = (event) => {\n    this.setState({\n      amount: event.target.value\n    })\n  }\n\n  handleExpCatChange = (event) => {\n    this.setState({\n      expensesCat: event.target.value\n    })\n  }\n  handleMessageChange = (event) => {\n    this.setState({\n      message: event.target.value\n    })\n  }\n\n  handleEgiftChange = (event) => {\n    this.setState({\n      eGift: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    alert(`${this.state.username} ${this.state.comments} ${this.state.topic}`);\n    event.preventDefault();\n    let data = {\n      custID: this.props.cusID,\n      payeeID: this.state.payeeID,\n      dateTime: this.state.dateTime,\n      amount: this.state.amount,\n      expensesCat: this.state.expensesCat,\n      eGift: this.state.eGift,\n      message: this.state.message,\n    };\n    Axios.post(\"/transaction/add\", data)\n      .then((res) => {\n        console.log(\"Successful transaction\");\n      })\n      .catch(err => {\n        console.log()\n      });\n  }\n\n\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    let data = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    Axios.post(\"/transaction/add\", data)\n      .then((res) => {\n        console.log(\"Successful transaction\");\n      })\n      .catch(err => {\n        console.log(err)\n      });\n  }\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label>CustID</label>\n          <input type=\"text\" value={this.state.cusID} />\n        </div>\n        <div>\n          <label>PayeeID</label>\n          <input\n            type=\"text\"\n            value={this.state.payeeID}\n            onChange={this.handlePayeeIDChange}\n          />\n        </div>\n        <div>\n          <label>DateTime</label>\n          <textarea value={this.state.dateTime} />\n        </div>\n        <div>\n          <label>Amount</label>\n          <textarea\n            type=\"text\"\n            value={this.state.amount}\n            onChange={this.handleAmountChange}\n          />\n        </div>\n        <div>\n          <label>Expenses Category</label>\n          <select\n            value={this.state.expensesCat}\n            onChange={this.handleExpCatChange}\n          >\n            <option value=\"food\">Food</option>\n            <option value=\"transport\">Transport</option>\n            <option value=\"shopping\">Shopping</option>\n          </select>\n        </div>\n        <div>\n          <label>eGift</label>\n          <select\n            value={this.state.eGift}\n            onChange={this.handleEgiftChange}\n          >\n            <option value=\"false\">False</option>\n            <option value=\"true\">True</option>\n          </select>\n        </div>\n        <div>\n          <label>Message</label>\n          <input\n            type=\"text\"\n            value={this.state.message}\n            onChange={this.handleMessageChange}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default transferForm;","/Users/ericyjw/Desktop/SEED2021_TT2_9/src/components/dashboard.js",[],"/Users/ericyjw/Desktop/SEED2021_TT2_9/src/Charts.js",["79"],"import React, { Component } from 'react'\n//import Highcharts from 'highcharts'\n//import HighchartsReact from 'highcharts-react-official'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n\nam4core.useTheme(am4themes_animated);\nam4core.useTheme(am4themes_material);\n\n\nclass Charts extends Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\n\n    let data = [{\"eGift\":true,\"dateTime\":\"2020-09-02T10:21:33.457Z\",\"custID\":9,\"expensesCat\":\"Food\",\"amount\":859.25,\"message\":\"Thanks. :)\",\"payeeID\":4},\n    {\"eGift\":false,\"dateTime\":\"2020-07-05T05:16:26.062Z\",\"custID\":25,\"expensesCat\":\"Food\",\"amount\":630.1,\"message\":\"\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-12-11T05:20:47.780Z\",\"custID\":7,\"expensesCat\":\"Transport\",\"amount\":0.01,\"message\":\"msg\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-12-11T05:48:35.390Z\",\"custID\":7,\"expensesCat\":\"Transport\",\"amount\":0.01,\"message\":\"msg\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-08-16T01:09:11.190Z\",\"custID\":25,\"expensesCat\":\"Entertainment\",\"amount\":581.43,\"message\":\"Thanks. :)\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-06-06T03:11:59.690Z\",\"custID\":10,\"expensesCat\":\"Food\",\"amount\":519.26,\"message\":\"Thanks. :)\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-08-27T20:16:56.728Z\",\"custID\":22,\"expensesCat\":\"Insurance\",\"amount\":130.07,\"message\":\"Thanks. :)\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-12-11T05:43:18.680Z\",\"custID\":7,\"expensesCat\":\"Transport\",\"amount\":0.01,\"message\":\"msg\",\"payeeID\":9},\n    {\"eGift\":false,\"dateTime\":\"2020-05-05T17:03:08.932Z\",\"custID\":23,\"expensesCat\":\"Transport\",\"amount\":511.49,\"message\":\"\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-11-21T05:56:19.444Z\",\"custID\":9,\"expensesCat\":\"Transport\",\"amount\":221.4,\"message\":\"Thanks. :)\",\"payeeID\":13},\n    {\"eGift\":false,\"dateTime\":\"2020-04-09T15:35:26.855Z\",\"custID\":22,\"expensesCat\":\"Transport\",\"amount\":181.49,\"message\":\"\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-12-11T05:22:53.113Z\",\"custID\":7,\"expensesCat\":\"Transport\",\"amount\":0.01,\"message\":\"msg\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2019-12-14T12:27:01.750Z\",\"custID\":9,\"expensesCat\":\"Food\",\"amount\":472.33,\"message\":\"Thanks. :)\",\"payeeID\":1},\n    {\"eGift\":true,\"dateTime\":\"2020-06-27T01:02:58.171Z\",\"custID\":9,\"expensesCat\":\"Food\",\"amount\":514.98,\"message\":\"Thanks. :)\",\"payeeID\":11},\n    {\"eGift\":true,\"dateTime\":\"2020-04-17T15:54:28.853Z\",\"custID\":20,\"expensesCat\":\"Transport\",\"amount\":468.69,\"message\":\"Thanks. :)\",\"payeeID\":9},\n    {\"eGift\":false,\"dateTime\":\"2020-06-29T14:25:40.862Z\",\"custID\":25,\"expensesCat\":\"Shopping\",\"amount\":120.53,\"message\":\"\",\"payeeID\":9},\n    {\"eGift\":true,\"dateTime\":\"2020-05-06T00:12:44.701Z\",\"custID\":9,\"expensesCat\":\"Shopping\",\"amount\":214.69,\"message\":\"Thanks. :)\",\"payeeID\":16}]\n\n    chart.data = [{\n        \"expensesCat\": \"Food\",\n        \"amount\": 501.9\n      }, {\n        \"expensesCat\": \"Transport\",\n        \"amount\": 301.9\n      }, {\n        \"expensesCat\": \"Entertainment\",\n        \"amount\": 201.1\n      }, {\n        \"expensesCat\": \"Insurance\",\n        \"amount\": 165.8\n      }, {\n        \"expensesCat\": \"Shopping\",\n        \"amount\": 139.9\n      }\n      ];\n      let pieSeries = chart.series.push(new am4charts.PieSeries());\n      pieSeries.dataFields.value = \"amount\";\n      pieSeries.dataFields.category = \"expensesCat\";\n      chart.innerRadius = am4core.percent(40);\n      chart.legend = new am4charts.Legend();\n\n    }\n\n    componentWillUnmount() {\n        if (this.chart) {\n          this.chart.dispose();\n        }\n      }\n      render() {\n        return (\n          <div className=\"App\">\n            <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n          </div>\n        );\n      }\n    }\n    export default Charts;\n",{"ruleId":"80","severity":1,"message":"81","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":13},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"80","severity":1,"message":"88","line":13,"column":10,"nodeType":"82","messageId":"83","endLine":13,"endColumn":20},{"ruleId":"80","severity":1,"message":"89","line":13,"column":22,"nodeType":"82","messageId":"83","endLine":13,"endColumn":30},{"ruleId":"80","severity":1,"message":"90","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":14},{"ruleId":"80","severity":1,"message":"91","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":18,"column":5,"nodeType":"94","endLine":18,"endColumn":7,"suggestions":"95"},{"ruleId":"80","severity":1,"message":"96","line":208,"column":10,"nodeType":"82","messageId":"83","endLine":208,"endColumn":21},{"ruleId":"80","severity":1,"message":"97","line":216,"column":22,"nodeType":"82","messageId":"83","endLine":216,"endColumn":30},{"ruleId":"80","severity":1,"message":"98","line":217,"column":10,"nodeType":"82","messageId":"83","endLine":217,"endColumn":24},{"ruleId":"80","severity":1,"message":"99","line":218,"column":10,"nodeType":"82","messageId":"83","endLine":218,"endColumn":22},{"ruleId":"80","severity":1,"message":"100","line":222,"column":7,"nodeType":"82","messageId":"83","endLine":222,"endColumn":16},{"ruleId":"80","severity":1,"message":"101","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":227,"column":1,"nodeType":"104","endLine":231,"endColumn":3},{"ruleId":"105","severity":1,"message":"106","line":5,"column":3,"nodeType":"107","messageId":"108","endLine":7,"endColumn":4},{"ruleId":"80","severity":1,"message":"109","line":17,"column":9,"nodeType":"82","messageId":"83","endLine":17,"endColumn":13},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'isLoggedIn' is assigned a value but never used.","'setLogIn' is assigned a value but never used.","'Header' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserName' and 'fetchUserTransaction'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'ITableProps' is defined but never used.","'DataType' is defined but never used.","'ICellTextProps' is defined but never used.","'DispatchFunc' is defined but never used.","'DeleteRow' is assigned a value but never used.","'IPagingProps' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [fetchUserName, fetchUserTransaction]",{"range":"115","text":"116"},[596,598],"[fetchUserName, fetchUserTransaction]"]